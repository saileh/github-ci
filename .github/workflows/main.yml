name: main
on:
  workflow_dispatch:
  push:
    branches:
      - "**"

permissions:
  contents: write

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - uses: pre-commit/action@v3.0.0

  run-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        type: ["small", "large"]
        exclude:
          - python-version: "3.11"
            type: "large"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "${{matrix.python-version}}"
      - name: Install jobsim
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install

      - name: run tests
        run: poetry run python -m pytest -v --junitxml=${{matrix.type}}_tests_results_${{matrix.python-version}}.xml tests/${{matrix.type}}

      - uses: actions/upload-artifact@v3
        with:
          name: "${{matrix.type}}_tests_results_${{matrix.python-version}}"
          path: "${{matrix.type}}_tests_results_${{matrix.python-version}}.xml"
        if: always()

  report_workflow:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - run-tests
    steps:
      - uses: uoboda-splunk/workflow-info-splunk-upload-action@v1
        with:
          splunk_host: ${{ secrets.SPLUNK_HOST }}
          splunk_token: ${{ secrets.SPLUNK_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

  release:
    if: always()
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Semantic release
        id: semantic
        uses: splunk/semantic-release-action@v1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          extra_plugins: |
            @google/semantic-release-replace-plugin
